# make_data.py 파일은 랜덤한 더미 데이터를 만드는 예시 파일입니다.
# 반드시, 사용하는 필드를 확인한 후 본인의 프로젝트에 맞게 수정하여 진행해야 합니다.

# [참고] 현재 코드는 아래 User 모델을 기준으로 작성되어 있습니다.
# class User(AbstractBaseUser):
#     username = models.CharField(max_length=30, unique=True)
#     nickname = models.CharField(max_length=255, blank=True, null=True)
#     email = models.EmailField(max_length=254, blank=True, null=True)
#     age = models.IntegerField(blank=True, null=True)
#     money = models.IntegerField(blank=True, null=True)
#     salary = models.IntegerField(blank=True, null=True)
#     # 가입한 상품 목록 리스트를 ,로 구분된 문자열로 저장함
#     financial_products = models.TextField(blank=True, null=True)
    
#     # superuser fields
#     is_active = models.BooleanField(default=True)
#     is_staff = models.BooleanField(default=False)
#     is_superuser = models.BooleanField(default=False)


import random
import requests
first_name_samples = "김이박최정강조윤장임가나다라마바사아자차카타파하"
middle_name_samples = "민서예지도하주윤채현지김기니디리미비시이지치키티피히"
last_name_samples = "준윤우원호후서연아은진거너더러머버서어저처커터퍼허"


def random_name():
    result = ""
    result += random.choice(first_name_samples)
    result += random.choice(middle_name_samples)
    result += random.choice(last_name_samples)
    return result + str(random.randint(1, 10000))


financial_products = [
        "WR0001B",
        "00320342",
        "10511008000996000",
        "10511008001004000",
        "10511008001166004",
        "10511008001278000",
        "01030500510002",
        "01030500560002",
        "01030500600002",
        "TD11300027000",
        "TD11300031000",
        "TD11300035000",
        "TD11300036000",
        "200000301",
        "200000303",
        "10-01-20-024-0046-0000",
        "10-01-20-024-0059-0000",
        "21001115",
        "21001203",
        "01211310121",
        "01211310127",
        "01211310130",
        "05100",
        "06492",
        "010300100335",
        "200-0135-12",
        "10-003-1225-0001",
        "10-003-1381-0001",
        "10-003-1384-0001",
        "10-003-1387-0001",
        "4",
        "01013000110000000001",
        "10120110400011",
        "10120114300011",
        "10120114700011",
        "10120116100011",
        "10-01-20-388-0002",
        "1001202000002",
        "HK00001",
        "HK00006",
        "HK00007",
        "HK00009",
        "HK00010",
        "HK00011",
        "24000",
        "24002",
        "24036",
        "24037",
        "0800",
        "0801",
        "2400",
        "2401",
        "2402",
        "240023",
        "240025",
        "240029",
        "240031",
        "240033",
        "240035",
        "240037",
        "MK240001",
        "MK240002",
        "MK240018",
        "MK240020",
        "1001",
        "240004",
        "240018",
        "240021",
        "240027",
        "240032",
        "240039",
        "240041",
        "240042",
        "240045",
        "240074",
        "240076",
        "024240001",
        "024241001",
        "024242001",
        "024242002",
        "240000",
        "250022",
        "250023",
        "250027",
        "230035",
        "240001",
        "240002",
        "240010",
        "240034",
        "240036",
        "240044",
        "240046",
        "240050",
        "240052",
        "240061",
        "240062",
        "240065",
        "240066",
        "240069",
        "240071",
        "24",
        "24-1",
        "24-2",
        "24-3",
        "24-4",
        "24-5",
        "240038",
        "KJ0001A",
        "KJ0004A",
        "DH001",
        "DH002",
        "240005",
        "240007",
        "240006",
        "240013",
        "240015",
        "240017",
        "240019",
        "KH2400",
        "KH2401",
        "KH2402",
        "KH2403",
        "KH2404",
        "240020",
        "241001",
        "240072",
        "240078",
        "240080",
        "240086",
        "240090",
        "240014",
        "240016",
        "240009",
        "24-0001",
        "24-0002",
        "24-0003",
        "NY240001",
        "NY240004",
        "NY240009",
        "240054",
        "240056",
        "240058",
        "240060",
        "240064",
        "240008",
        "240001 240002",
        "240006 240007",
        "240012",
        "241000",
        "241100",
        "242000",
        "243000",
        "243100",
        "240901",
        "24-0055",
        "24-0059",
        "24-0061",
        "24-0069",
        "24-0071",
        "24-0074",
        "24-0079",
        "24-0081",
        "24-0083",
        "24-0085",
        "24-0086",
        "24-0089",
        "24-0090",
        "24-0091",
        "GP240026",
        "GP240037",
        "GP240038",
        "GP240043",
        "GP240054",
        "GP240060",
        "GP240066",
        "GP240073",
        "GP240078",
        "GP240080",
        "GP240082",
        "GP240084",
        "GP240086",
        "GP240087",
        "GP240090",
        "GP240091",
        "GP240094",
        "GP240095",
        "GP240098",
        "GP240099",
        "GP240103",
        "GP240105",
        "GP240107",
        "GP240109",
        "240093",
        "240095",
        "240097",
        "240109",
        "240003",
        "401001",
        "401002",
        "401004",
        "240048",
        "240053",
        "24-0017",
        "24-0019",
        "24-0023",
        "02030",
        "02035",
        "02040",
        "02060",
        "02080",
        "02081",
        "02082",
        "02083",
        "02084",
        "02085",
        "02086",
        "02087",
        "02088",
        "02089",
        "02090",
        "02091",
        "02092",
        "02093",
        "02094",
        "02095",
        "02096",
        "02097",
        "02098",
        "02099",
        "240008 240009",
        "240010 240011",
        "241003",
        "WR0001A",
        "WR0001J",
        "WR0001M",
        "240081",
        "240160",
        "240162",
        "240168",
        "380001",
        "C614001",
        "C614002",
        "C614003",
        "JH0001A",
        "JH0002A",
        "JH0003C",
        "240011",
        "240030",
        "JT3320124",
        "JT3320125",
        "JT3320127",
        "JT3320128",
        "24031",
        "24502",
        "TD",
        "TD07 TB07",
        "TD21",
        "TD22",
        "TD31",
        "TD33",
        "BNK1001",
        "BNK1003",
        "BNK1005",
        "240059",
        "JTCSB240001",
        "JTCSB240060",
        "24010",
        "24017",
        "24110",
        "24117",
        "1120241001",
        "1120241011",
        "1120242001",
        "1120242003",
        "1120243002",
        "1120243003",
        "240067",
        "240070",
        "240099",
        "WR0001F",
        "WR0001L",
        "00266451",
        "10521001000846001",
        "10521001001177000",
        "10527001000925000",
        "10527001001272000",
        "10527001001278000",
        "01020400380001",
        "01020400490001",
        "01020400490002",
        "01020400510001",
        "01020400530001",
        "01020400610001",
        "01020400620001",
        "TD11330028000",
        "TD11330029000",
        "TD11330030000",
        "TD11330031000",
        "TD11330032000",
        "220002101",
        "220002301",
        "220002501",
        "220002701",
        "10-01-30-031-0018-0000",
        "10-01-30-031-0037-0000",
        "21000111",
        "21001116",
        "21001199",
        "21001236",
        "21001259",
        "01211210110",
        "01211210113",
        "01211210121",
        "01211210122",
        "03010",
        "03100",
        "03202",
        "010200100051",
        "010200100092",
        "010200100104",
        "230-0119-85",
        "10-047-1360-0002",
        "10-047-1365-0001",
        "10-047-1381-0001",
        "10-047-1387-0001",
        "10-059-1264-0001",
        "52",
        "53",
        "01012000200000000003",
        "01012000210000000000",
        "10140110400011",
        "10140114300011",
        "10140114700031",
        "10141109800021",
        "10141114300011",
        "10141114700031",
        "10141116600001",
        "10-01-30-355-0002",
        "10-01-30-355-0005",
        "1001303001001",
        "1001303001003",
        "1001303001004",
        "1001303001005",
        "HK00002",
        "HK00003",
        "HK00101",
        "31000",
        "31003",
        "0000",
        "0007",
        "0803",
        "0806",
        "310010",
        "310011",
        "310013",
        "MK310001",
        "MK310004",
        "MK310017",
        "MK310022",
        "2001",
        "2002",
        "310002",
        "310003",
        "310004",
        "310001",
        "311001",
        "311002",
        "310027",
        "310028",
        "024310001",
        "024311001",
        "024312001",
        "310000",
        "310009",
        "310005",
        "310006",
        "310008",
        "310018",
        "310019",
        "31",
        "31-1",
        "310007",
        "310016",
        "310017",
        "KJ0001B",
        "KJ0004B",
        "DH003",
        "DH004",
        "310012",
        "KH3100",
        "KH3101",
        "KH3102",
        "KH3103",
        "31-0001",
        "31-0002",
        "31-0003",
        "NY310006",
        "NY310007",
        "NY310009",
        "311000",
        "311100",
        "310035",
        "310052",
        "310601",
        "31-0026",
        "31-0027",
        "31-0031",
        "31-0032",
        "31-0038",
        "310033",
        "GP310001",
        "GP310015",
        "GP310017",
        "310037",
        "310039",
        "310044",
        "310045",
        "310046",
        "310047",
        "310050",
        "401003",
        "401005",
        "310024",
        "310034",
        "31-0004",
        "31-0005",
        "31-0006",
        "02010",
        "02011",
        "02012",
        "02070",
        "310014",
        "38",
        "WR0001K",
        "WR0001N",
        "310030",
        "311098",
        "311099",
        "310020",
        "C614004",
        "C614005",
        "JH0001B",
        "JH0001C",
        "310015",
        "31001",
        "31501",
        "31535",
        "JJ",
        "JJ05",
        "310040",
        "310041",
        "BNK1002",
        "JTCSB310010",
        "JTCSB310013",
        "JTCSB310026",
        "31010",
        "31015 31115",
        "31030",
        "31040",
        "31110",
        "31140",
        "1130311001",
        "1130312001",
        "1130312006",
        "1130312007",
        "1130313002",
        "1130313503",
        "1130313504",
        "1130313506",
        "1130313507",
        "1130313561",
        "1130313562",
        "1130315004",
        "1130315006",
        "1130315008",
        "1130315009"
    ]

# # 현재 API 에 들어있는 금융 상품 코드 리스트 저장
# DP_URL = 'http://finlife.fss.or.kr/finlifeapi/depositProductsSearch.json'
# SP_URL = 'http://finlife.fss.or.kr/finlifeapi/savingProductsSearch.json'

# API_KEY = '<API_KEY>'


# params = {
#   'auth': API_KEY,
#   # 금융회사 코드 020000(은행), 030200(여신전문), 030300(저축은행), 050000(보험), 060000(금융투자)
#   'topFinGrpNo': '020000',
#   'pageNo': 1
# }

# # 정기예금 목록 저장
# response = requests.get(DP_URL, params=params).json()
# baseList = response.get('result').get('baseList')   # 상품 목록

# for product in baseList:
#     financial_products.append(product['fin_prdt_cd'])

# # 적금 목록 저장
# response = requests.get(SP_URL, params=params).json()
# baseList = response.get('result').get('baseList')   # 상품 목록

# for product in baseList:
#     financial_products.append(product['fin_prdt_cd'])

dict_keys = ['username', 'gender', 'financial_products', 'age', 'money', 'salary']

# json 파일 만들기
import json
from collections import OrderedDict

file = OrderedDict()

username_list = []
N = 10000
i = 0

while i < N:
    rn = random_name()
    if rn in username_list:
        continue
    
    username_list.append(rn)
    i += 1


# 저장 위치는 프로젝트 구조에 맞게 수정합니다.
save_dir = './user_data.json'
financial_products_pk = [f'{_}' for _ in range(1,477)]
with open(save_dir, 'w', encoding="utf-8") as f:
    f.write('[')
    
    for i in range(N):
        # 랜덤한 데이터를 삽입

        # 랜덤한 0~5개의 상품을 가입하도록 삽입됨
        file['age']    = random.randint(1, 100)  # 나이
        file['money']= random.randrange(0, 1000000000, 1000000)    # 현재 가진 금액
        file['salary']= random.randrange(24000000, 100000000, 100000) # 연봉
        file['financial_products']    = random.choice(financial_products_pk) # 금융 상품


        json.dump(file, f, ensure_ascii=False, indent="\t")
        if i != N-1:
            f.write(',')
    f.write(']')
    f.close()
print(financial_products, len(financial_products))
print(f'데이터 생성 완료 / 저장 위치: {save_dir}')
print(financial_products_pk)